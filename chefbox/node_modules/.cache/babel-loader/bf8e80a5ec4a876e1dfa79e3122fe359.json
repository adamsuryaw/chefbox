{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Expo\\\\Binar_Project\\\\FinalProject-Chefbox\\\\frontend\\\\chefbox\\\\src\\\\Component\\\\Cover\\\\Cover.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Cover.css\";\nimport bgCover from \"../../Asset/Frame 4.svg\";\nimport logo from \"../../Asset/Group 2.svg\";\nimport { Grid, Paper, Box, Button, Divider } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { Formik, Form } from \"formik\";\nimport TextBarLogin from \"../TextBar/TextBarLogin\";\nimport ButtonComp from \"../Button/Button\";\nimport * as Yup from \"yup\";\nimport Auth from \"../Auth/Auth\";\nimport { Link } from \"react-router-dom\";\nimport { LoginAction } from \"../../store/actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cover() {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const validate = Yup.object({\n    email: Yup.string().email(\"Email is Invalid\").required(\"Required\").matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, \"Please Input Your Email\")\n  });\n  const Item = styled(Paper)(_ref => {\n    let {\n      theme\n    } = _ref;\n    return { ...theme.typography.body2,\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cover-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cover-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"bg-image\",\n        src: bgCover,\n        alt: \"background image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xl: 6,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"logo-image\",\n              src: logo,\n              alt: \"logo image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xl: 6,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              backgroundColor: \"white\",\n              width: \"100%\",\n              height: \"911px\",\n              borderRadius: \"80px 0 0 80px\",\n              marginTop: \"60px\",\n              boxShadow: \"0px 4px 24px 4px rgba(0, 0, 0, 0.15)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: {\n                email: \"\",\n                passowrd: \"\"\n              },\n              onSubmit: values => {\n                dispatch(LoginAction(values));\n                navigate('/register/signup');\n                console.log(values);\n              },\n              validationSchema: validate,\n              children: formikProps => {\n                const {\n                  handleSubmit\n                } = formikProps;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"field-top\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"name-top\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"Login\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                      children: [\"New user? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"Create an account\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 69,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form, {\n                    children: [/*#__PURE__*/_jsxDEV(TextBarLogin, {\n                      label: \"Email\",\n                      name: \"email\",\n                      type: \"text\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TextBarLogin, {\n                      label: \"Passowrd\",\n                      name: \"password\",\n                      type: \"password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"forgot\",\n                      children: \"Forgot password?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(ButtonComp, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                width: \"700px\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                marginTop: \"136px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cover, \"R1L93MxeLXzQXESpmjjjQSuQgvM=\", true);\n\n_c = Cover;\nexport default Cover;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cover\");","map":{"version":3,"sources":["D:/Project Expo/Binar_Project/FinalProject-Chefbox/frontend/chefbox/src/Component/Cover/Cover.jsx"],"names":["React","Grid","Paper","Box","Button","Divider","styled","Formik","Form","TextBarLogin","ButtonComp","Yup","Auth","Link","LoginAction","Cover","dispatch","useDispatch","navigate","useNavigate","validate","object","email","string","required","matches","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","bgCover","logo","backgroundColor","width","height","borderRadius","marginTop","boxShadow","passowrd","values","console","log","formikProps","handleSubmit","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Cover.css\";\r\nimport bgCover from \"../../Asset/Frame 4.svg\";\r\nimport logo from \"../../Asset/Group 2.svg\";\r\nimport { Grid, Paper, Box, Button, Divider } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Formik, Form } from \"formik\";\r\nimport TextBarLogin from \"../TextBar/TextBarLogin\";\r\nimport ButtonComp from \"../Button/Button\";\r\nimport * as Yup from \"yup\";\r\nimport Auth from \"../Auth/Auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoginAction } from \"../../store/actions/auth\";\r\n\r\nfunction Cover() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const validate = Yup.object({\r\n    email: Yup.string()\r\n      .email(\"Email is Invalid\")\r\n      .required(\"Required\")\r\n      .matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, \"Please Input Your Email\"),\r\n  });\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\n  return (\r\n    <div className='cover-page'>\r\n      <div className='cover-background'>\r\n        <img className='bg-image' src={bgCover} alt='background image' />\r\n        <Grid container>\r\n          <Grid item xl={6}>\r\n            <Link to='/'>\r\n              <img className='logo-image' src={logo} alt='logo image' />\r\n            </Link>\r\n          </Grid>\r\n          <Grid item xl={6}>\r\n            <Box\r\n              sx={{\r\n                backgroundColor: \"white\",\r\n                width: \"100%\",\r\n                height: \"911px\",\r\n                borderRadius: \"80px 0 0 80px\",\r\n                marginTop: \"60px\",\r\n                boxShadow: \"0px 4px 24px 4px rgba(0, 0, 0, 0.15)\",\r\n              }}>\r\n              <Formik\r\n                initialValues={{\r\n                  email: \"\",\r\n                  passowrd: \"\",\r\n                }}\r\n                onSubmit={(values) => {\r\n                  dispatch(LoginAction(values));\r\n                  navigate('/register/signup')\r\n                  console.log(values)\r\n                }}\r\n                validationSchema={validate}>\r\n                {(formikProps) => {\r\n                  const {handleSubmit} = formikProps\r\n                  return(\r\n                  <div className='field-top'>\r\n                    <div className='name-top'>\r\n                      <h1>Login</h1>\r\n                      <h6>\r\n                        New user? <span>Create an account</span>\r\n                      </h6>\r\n                    </div>\r\n                    <Form>\r\n                      <TextBarLogin \r\n                        label='Email' \r\n                        name='email' \r\n                        type='text' \r\n                      />\r\n                      <TextBarLogin\r\n                        label='Passowrd'\r\n                        name='password'\r\n                        type='password'\r\n                      />\r\n                      <h6 className='forgot'>Forgot password?</h6>\r\n                      <ButtonComp />\r\n                    </Form>\r\n                  </div>\r\n                )}}\r\n              </Formik>\r\n              <Divider\r\n                sx={{\r\n                  width: \"700px\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  marginTop: \"136px\",\r\n                }}\r\n              />\r\n              <Auth />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cover;\r\n"]},"metadata":{},"sourceType":"module"}