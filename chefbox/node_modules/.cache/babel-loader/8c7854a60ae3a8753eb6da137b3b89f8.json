{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Expo\\\\Binar_Project\\\\FinalProject-Chefbox\\\\frontend\\\\chefbox\\\\src\\\\Component\\\\TextBar\\\\TextBarSignup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport './TextBarRegis.css';\nimport { TextField, Grid, Paper, Box, MenuItem } from '@mui/material';\nimport { useField } from 'formik';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currencies = [{\n  value: 'Surabaya',\n  label: 'Surabaya'\n}, {\n  value: 'Jakarta',\n  label: 'Jakarta'\n}, {\n  value: 'Yogyakarta',\n  label: 'Yogyakarta'\n}, {\n  value: 'Balikpapan',\n  label: 'Balikpapan'\n}];\n\nfunction TextBarSignup(_ref) {\n  _s();\n\n  let {\n    label,\n    ...props\n  } = _ref;\n  const [field, meta] = useField(props); // console.log(field, meta)\n  // console.log(props)\n\n  const [dataLoc, setDataLoc] = useState();\n  const [currency, setCurrency] = useState('');\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    setCurrency(event.target.value);\n  };\n\n  const Item = styled(Paper)(_ref2 => {\n    let {\n      theme\n    } = _ref2;\n    return { ...theme.typography.body2,\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    };\n  });\n  useEffect(() => {\n    const fetchLoc = async () => {\n      try {\n        const res = await axios.get(`http://chefbox2021.herokuapp.com/user/complete-signup`);\n        setDataLoc(res.data.data);\n        console.log(res.data.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (id) {\n      console.log(currentToken);\n      fetchDetail();\n      fetchComment();\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        xl: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginLeft: '88px',\n            width: '700px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labelRegis\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: field.name,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), props.select === undefined ? /*#__PURE__*/_jsxDEV(TextField, {\n            sx: {\n              display: 'block',\n              fontSize: '14px',\n              marginTop: '8.21px'\n            },\n            type: props.type,\n            ...field,\n            ...props,\n            fullWidth: true,\n            variant: \"outlined\",\n            error: meta.touched && Boolean(meta.error),\n            helperText: meta.touched && meta.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n            sx: {\n              display: 'block',\n              fontSize: '14px',\n              marginTop: '8.21px'\n            },\n            type: props.type,\n            ...field,\n            ...props,\n            fullWidth: true,\n            select: true,\n            value: dataLoc,\n            onChange: handleChange,\n            variant: \"outlined\",\n            error: meta.touched && Boolean(meta.error),\n            helperText: meta.touched && meta.error,\n            children: dataLoc === null || dataLoc === void 0 ? void 0 : dataLoc.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.id_location,\n              children: option.label\n            }, option.id_location, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TextBarSignup, \"nrL4nIeJi9XN+vKJTiZyBamk6+o=\", false, function () {\n  return [useField, useParams, useDispatch];\n});\n\n_c = TextBarSignup;\nexport default TextBarSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextBarSignup\");","map":{"version":3,"sources":["D:/Project Expo/Binar_Project/FinalProject-Chefbox/frontend/chefbox/src/Component/TextBar/TextBarSignup.jsx"],"names":["React","useState","useEffect","axios","useDispatch","useParams","TextField","Grid","Paper","Box","MenuItem","useField","styled","currencies","value","label","TextBarSignup","props","field","meta","dataLoc","setDataLoc","currency","setCurrency","id","dispatch","handleChange","event","target","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","fetchLoc","res","get","data","console","log","error","currentToken","fetchDetail","fetchComment","marginLeft","width","name","select","undefined","display","fontSize","marginTop","type","touched","Boolean","map","option","id_location"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch } from 'react-redux';\r\nimport {useParams} from 'react-router-dom'\r\nimport './TextBarRegis.css'\r\nimport { TextField, Grid, Paper, Box, MenuItem } from '@mui/material';\r\nimport { useField } from 'formik';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst currencies = [\r\n    {\r\n        value: 'Surabaya',\r\n        label: 'Surabaya',\r\n    },\r\n    {\r\n        value: 'Jakarta',\r\n        label: 'Jakarta',\r\n    },\r\n    {\r\n        value: 'Yogyakarta',\r\n        label: 'Yogyakarta',\r\n    },\r\n    {\r\n        value: 'Balikpapan',\r\n        label: 'Balikpapan',\r\n    },\r\n];\r\n\r\nfunction TextBarSignup({label,...props}) {\r\n    const [field, meta] = useField(props)\r\n    // console.log(field, meta)\r\n    // console.log(props)\r\n    const [dataLoc, setDataLoc] = useState()\r\n    const [currency, setCurrency] = useState('');\r\n    const {id} = useParams()\r\n    const dispatch = useDispatch()\r\n    const handleChange = (event) => {\r\n        setCurrency(event.target.value);\r\n    };\r\n    const Item = styled(Paper)(({ theme }) => ({\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        const fetchLoc = async () => {\r\n            try{\r\n                const res = await axios.get(`http://chefbox2021.herokuapp.com/user/complete-signup`)\r\n                \r\n                setDataLoc(res.data.data)\r\n                console.log(res.data.data)\r\n            } catch(error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        if(id){\r\n            console.log(currentToken)\r\n            fetchDetail()\r\n            fetchComment()\r\n        }\r\n    }, [id])\r\n\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <Grid xl={12}>\r\n                    <Box sx={{marginLeft: '88px', width:'700px'}}>\r\n                        <div className=\"labelRegis\">\r\n                            <label htmlFor={field.name}>{label}</label>\r\n                        </div>\r\n                        {props.select === undefined ?\r\n                        <TextField \r\n                            sx={{display: 'block', fontSize: '14px', marginTop: '8.21px'}}\r\n                            type={props.type}\r\n                            {...field}\r\n                            {...props}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            error={meta.touched && Boolean(meta.error)}\r\n                            helperText={meta.touched && meta.error}\r\n                        />\r\n                        :\r\n                        <TextField \r\n                            sx={{display: 'block', fontSize: '14px', marginTop: '8.21px'}}\r\n                            type={props.type}\r\n                            {...field}\r\n                            {...props}\r\n                            fullWidth\r\n                            select\r\n                            value={dataLoc}\r\n                            onChange={handleChange}\r\n                            variant=\"outlined\"\r\n                            error={meta.touched && Boolean(meta.error)}\r\n                            helperText={meta.touched && meta.error}\r\n                        >\r\n                            {dataLoc?.map((option) => (\r\n                                <MenuItem key={option.id_location} value={option.id_location}>\r\n                                {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                        }\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextBarSignup\r\n"]},"metadata":{},"sourceType":"module"}