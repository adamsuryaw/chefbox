{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Expo\\\\Binar_Project\\\\FinalProject-Chefbox\\\\frontend\\\\chefbox\\\\src\\\\Component\\\\Register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"./Register.css\";\nimport bgCover from \"../../Asset/Frame 4.svg\";\nimport logo from \"../../Asset/Group 2.svg\";\nimport { Grid, Paper, Box, Button, Divider, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { Formik, Form } from \"formik\";\nimport TextBarRegis from \"../TextBar/TextBarRegis\";\nimport ButtonRegis from \"../Button/ButtonRegis\";\nimport * as Yup from \"yup\";\nimport Auth from \"../Auth/Auth\";\nimport AuthRegis from \"../Auth/AuthRegis\";\nimport { Link } from \"react-router-dom\";\nimport { RegisterAction } from '../../store/actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const {\n    data: userData\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const validate = Yup.object({\n    username: Yup.string().max(15, \"Must be 20 character or less\").required(\"Required\"),\n    email: Yup.string().email(\"Email is Invalid\").required(\"Required\").matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, \"Please Input Your Email\"),\n    password: Yup.string(\"Please Enter Your Password\").required(\"Password must be required\").matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/, \"Password Must be at least 8 Characters\"),\n    confirmPassword: Yup.string().required(\"Re-enter your password\").oneOf([Yup.ref(\"password\"), null], \"Password must match\")\n  });\n  const Item = styled(Paper)(_ref => {\n    let {\n      theme\n    } = _ref;\n    return { ...theme.typography.body2,\n      padding: theme.spacing(1),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    };\n  });\n\n  const handleSubmit = () => {\n    dispatch(RegisterAction(initialValues));\n    console.log(handleSubmit(initialValues));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"bg-image\",\n        src: bgCover,\n        alt: \"background image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xl: 6,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"logo-image\",\n              src: logo,\n              alt: \"logo image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xl: 6,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              backgroundColor: \"white\",\n              width: \"100%\",\n              height: \"911px\",\n              borderRadius: \"80px 0 0 80px\",\n              marginTop: \"60px\",\n              boxShadow: \"0px 4px 24px 4px rgba(0, 0, 0, 0.15)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: {\n                username: \"\",\n                email: \"\",\n                passowrd: \"\",\n                confirmPassword: \"\"\n              },\n              onSubmit: values => {\n                console.log({\n                  values\n                });\n              },\n              validationSchema: validate,\n              children: formik => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"field-top\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"name-top\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Create Account\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Already have account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Login\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this), console.log(formik.values), /*#__PURE__*/_jsxDEV(\"form\", {\n                  children: [/*#__PURE__*/_jsxDEV(TextBarRegis, {\n                    label: \"Username\",\n                    name: \"username\",\n                    type: \"text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TextBarRegis, {\n                    label: \"Email\",\n                    name: \"email\",\n                    type: \"text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TextBarRegis, {\n                    label: \"Passowrd\",\n                    name: \"password\",\n                    type: \"password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TextBarRegis, {\n                    label: \"Confirm Passowrd\",\n                    name: \"confirmPassword\",\n                    type: \"password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/register/signup\",\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        marginLeft: '88px',\n                        width: '700px',\n                        marginTop: '30px'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"contained\",\n                        onClick: handleSubmit(),\n                        fullWidth: true,\n                        sx: {\n                          height: '45px',\n                          borderRadius: '24px',\n                          background: 'linear-gradient(45deg, #B6340B 30%, #B6340B 90%)',\n                          boxShadow: '0px 4px 10px rgba(33, 68, 87, 0.2)'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          sx: {\n                            fontFamily: 'Nunito',\n                            fontWeight: 'bold',\n                            fontSize: '16px'\n                          },\n                          children: \"Sign Up\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 129,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 118,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                width: \"700px\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                marginTop: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AuthRegis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"Tj5J7c8GZLihea/MTBYV+npp1JY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/Project Expo/Binar_Project/FinalProject-Chefbox/frontend/chefbox/src/Component/Register/Register.jsx"],"names":["React","useEffect","useDispatch","useSelector","Grid","Paper","Box","Button","Divider","Typography","styled","Formik","Form","TextBarRegis","ButtonRegis","Yup","Auth","AuthRegis","Link","RegisterAction","Register","data","userData","state","user","dispatch","validate","object","username","string","max","required","email","matches","password","confirmPassword","oneOf","ref","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","handleSubmit","initialValues","console","log","bgCover","logo","backgroundColor","width","height","borderRadius","marginTop","boxShadow","passowrd","values","formik","marginLeft","background","fontFamily","fontWeight","fontSize","marginRight"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport \"./Register.css\";\r\nimport bgCover from \"../../Asset/Frame 4.svg\";\r\nimport logo from \"../../Asset/Group 2.svg\";\r\nimport { Grid, Paper, Box, Button, Divider, Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Formik, Form } from \"formik\";\r\nimport TextBarRegis from \"../TextBar/TextBarRegis\";\r\nimport ButtonRegis from \"../Button/ButtonRegis\";\r\nimport * as Yup from \"yup\";\r\nimport Auth from \"../Auth/Auth\";\r\nimport AuthRegis from \"../Auth/AuthRegis\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {RegisterAction} from '../../store/actions/auth'\r\n\r\nfunction Register() {\r\n  const { data: userData } = useSelector(\r\n    (state) => state.user\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const validate = Yup.object({\r\n    username: Yup.string()\r\n      .max(15, \"Must be 20 character or less\")\r\n      .required(\"Required\"),\r\n    email: Yup.string()\r\n      .email(\"Email is Invalid\")\r\n      .required(\"Required\")\r\n      .matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, \"Please Input Your Email\"),\r\n    password: Yup.string(\"Please Enter Your Password\")\r\n      .required(\"Password must be required\")\r\n      .matches(\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\r\n        \"Password Must be at least 8 Characters\"\r\n      ),\r\n    confirmPassword: Yup.string()\r\n      .required(\"Re-enter your password\")\r\n      .oneOf([Yup.ref(\"password\"), null], \"Password must match\"),\r\n  });\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(RegisterAction(initialValues));\r\n    console.log(handleSubmit(initialValues));\r\n  };\r\n\r\n  return (\r\n    <div className='register-page'>\r\n      <div className='register-background'>\r\n        <img className='bg-image' src={bgCover} alt='background image' />\r\n        <Grid container>\r\n          <Grid item xl={6}>\r\n            <Link to='/'>\r\n              <img className='logo-image' src={logo} alt='logo image' />\r\n            </Link>\r\n          </Grid>\r\n          <Grid item xl={6}>\r\n            <Box\r\n              sx={{\r\n                backgroundColor: \"white\",\r\n                width: \"100%\",\r\n                height: \"911px\",\r\n                borderRadius: \"80px 0 0 80px\",\r\n                marginTop: \"60px\",\r\n                boxShadow: \"0px 4px 24px 4px rgba(0, 0, 0, 0.15)\",\r\n              }}>\r\n              <Formik\r\n                initialValues={{\r\n                  username: \"\",\r\n                  email: \"\",\r\n                  passowrd: \"\",\r\n                  confirmPassword: \"\",\r\n                }}\r\n                onSubmit={(values) => {\r\n                  console.log({values})\r\n                }}\r\n                validationSchema={validate}>\r\n                {(formik) => (\r\n                  <div className='field-top'>\r\n                    <div className='name-top'>\r\n                      <h1>Create Account</h1>\r\n                      <h6>\r\n                        Already have account? <span>Login</span>\r\n                      </h6>\r\n                    </div>\r\n                    {console.log(formik.values)}\r\n                    <form>\r\n                      <TextBarRegis\r\n                        label='Username'\r\n                        name='username'\r\n                        type='text'\r\n                        \r\n                      />\r\n                      <TextBarRegis \r\n                        label='Email' \r\n                        name='email' \r\n                        type='text' \r\n                      />\r\n                      <TextBarRegis\r\n                        label='Passowrd'\r\n                        name='password'\r\n                        type='password'\r\n                      />\r\n                      <TextBarRegis\r\n                        label='Confirm Passowrd'\r\n                        name='confirmPassword'\r\n                        type='password'\r\n                      />\r\n                      <Link to='/register/signup'>\r\n                        <Box sx={{marginLeft: '88px', width:'700px', marginTop: '30px'}}>\r\n                          <Button \r\n                            variant=\"contained\"\r\n                            onClick={handleSubmit()}\r\n                            fullWidth\r\n                            sx={{\r\n                              height: '45px',\r\n                              borderRadius: '24px',\r\n                              background: 'linear-gradient(45deg, #B6340B 30%, #B6340B 90%)',\r\n                              boxShadow: '0px 4px 10px rgba(33, 68, 87, 0.2)'\r\n                            }}\r\n                          >\r\n                            <Typography\r\n                              sx={{\r\n                                fontFamily: 'Nunito',\r\n                                fontWeight: 'bold',\r\n                                fontSize: '16px',\r\n                              }}\r\n                            >\r\n                              Sign Up\r\n                            </Typography>\r\n                          </Button>\r\n                        </Box>\r\n                      </Link>\r\n                    </form>\r\n                  </div>\r\n                )}\r\n              </Formik>\r\n              <Divider\r\n                sx={{\r\n                  width: \"700px\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n              />\r\n              <AuthRegis />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}